import { Button, VerticalBox, LineEdit, ComboBox, StandardButton } from "std-widgets.slint";
import {ErrorDialog} from "./components/ErrorDialog.slint";
export component TempConvWindow inherits Window {
    in property<string> result: "";
    in-out property<string> error-type-string: "Error";
    in-out property<string> error-text-value: "";
    in-out property<[string]> input-unit-list: ["C","F","K"];
    in-out property<[string]> output-unitlist: ["F","K"];
    out property<[string]> fk-unit-list: ["F","K"];
    out property<[string]> ck-unit-list: ["C","K"];
    out property<[string]> fc-unit-list: ["F","C"];
    in-out property<string> output-current-value: "F";
    in-out property<string> input-unit-current-value: "C";
    callback request-convert-temp(string);
    callback error-closed();
    callback show-error-popup();
    callback change-model();
    callback selected-input-unit(string);
    callback selected-output-unit(string);


    show-error-popup => {
        error-display.show-error-dialog();
        }


    selected-input-unit => {
        }


    
    error-display := ErrorDialog {
        background: parent.background;
        error-text-value: parent.error-text-value;
        error-type-string: parent.error-type-string;

        }

    GridLayout {
        padding: 15px;
        spacing: 10px;
        Row {
          temp-text :=  Text {
                text: "Enter Temperature";
                horizontal-alignment: center;
                }
            }
        Row {
          temp-input :=  LineEdit {
                font-size: 16px;
                width: unitin.preferred-width;
                height: 35px;
                placeholder-text: "input here";
                horizontal-alignment: center;
                }
            }
        Row {
            Text{
                text: "From";
                horizontal-alignment: center;
                }
            }
        Row {
            unitin :=  ComboBox {
                width: self.preferred-width;
                height: self.preferred-height;
                model: root.input-unit-list;
                current-value: root.input-unit-current-value;
                selected => {
                    root.selected-input-unit(self.current-value);
                    }
                }

            }
        Row {
            Text {
                text: "To";
                horizontal-alignment: center;
                }
            }
        Row {
            unitout :=  ComboBox {
                width: self.preferred-width;
                height: self.preferred-height;
                model: output-unitlist;
                current-value: root.output-current-value;
                selected => {
                    root.selected-output-unit(self.current-value);
                    }
                }
            }
        Row {
            Text {
                text: root.result;
                }
            }
        Row {
            Button {
                text: "Convert";
                clicked => {
                    root.request-convert-temp(temp-input.text);
                }
                }
            }
        }
        


}
