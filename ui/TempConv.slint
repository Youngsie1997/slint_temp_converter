import { Button, VerticalBox, LineEdit, ComboBox, StandardButton } from "std-widgets.slint";
import {ErrorDialog} from "./components/ErrorDialog.slint";
export component TempConvWindow inherits Window {
    in property<string> result: "";
    in-out property<string> error-type-string: "Error";
    in-out property<string> error-text-value: "";
    callback request-convert-temp(string);
    callback error-closed();
    callback show-error-popup();


    show-error-popup => {
        error-display.show-error-dialog();
        }


    
    error-display := ErrorDialog {
        background: parent.background;
        error-text-value: parent.error-text-value;
        error-type-string: parent.error-type-string;

        }
























































    GridLayout {
        padding: 15px;
        spacing: 10px;
        Row {
          temp-text :=  Text {
                text: "Enter Temperature";
                horizontal-alignment: center;
                }
            }
        Row {
          temp-input :=  LineEdit {
                font-size: 16px;
                width: unitin.preferred-width;
                height: 35px;
                placeholder-text: "input here";
                horizontal-alignment: center;
                }
            }
        Row {
            Text{
                text: "From";
                horizontal-alignment: center;
                }
            }
        Row {
            unitin :=  ComboBox {
                width: self.preferred-width;
                height: self.preferred-height;
                model: ["C", "F", "K"];
                current-value: "C";
                }

            }
        Row {
            Text {
                text: "To";
                horizontal-alignment: center;
                }
            }
        Row {
            unitout :=  ComboBox {
                width: self.preferred-width;
                height: self.preferred-height;
                model: ["C", "F", "K"];
                current-value: "F";
                }
            }
        Row {
            Text {
                text: root.result;
                }
            }
        Row {
            Button {
                text: "Convert";
                clicked => {
                    root.request-convert-temp(temp-input.text);
                }
                }
            }
        }
        


}
